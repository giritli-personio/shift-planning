openapi: "3.0.0"
info:
  title: "Shift Planning API"
  version: "0.1"
  description: "This service that exposes an API for shift planning with integration partners"

tags:
  - name: "Persons"
    description: "Endpoints related to person entity"
  - name: "Attendance"
    description: "Endpoints relating to the times that people work, and the rules that define this"

paths:
  /persons:
    get:
      description: "Retrieve information about a Person"
      externalDocs:
        url: https://developer.personio.de/v2.0/reference/get_v2-persons
      tags:
        - Persons
      responses:
        "200":
          description: "Successful response"
  /persons/{person_id}/periods:
    parameters:
      - $ref: '#/components/parameters/personIdParam'
    get:
      tags:
        - Attendance
      summary: "Retrieve all attendance periods for a given person"
      description: >-
        - Returns all periods associated with given person ID
      parameters:
        - in: query
          name: type
          schema:
            $ref: '#/components/schemas/AttendancePeriodTypeEnum'
          description: Filter by attendance period type
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/AttendancePeriodStatusEnum'
          description: Filter by attendance period approval status
        - in: query
          name: from
          description: Filter by attendance periods which start or end after a given date time
          schema:
            $ref: '#/components/schemas/DateTimeProperty'
        - in: query
          name: to
          description: Filter by attendance periods which start or end before a given date time
          schema:
            $ref: '#/components/schemas/DateTimeProperty'
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AttendancePeriod"
                  - $ref: "#/components/schemas/MetaObject"
    post:
      tags:
        - Attendance
      summary: "Create attendance period for a person"
      description: >-
        - Create attendance period for a given person ID
        - Return new period entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAttendancePeriodRequest"
      responses:
        "200":
          $ref: "#/components/responses/AttendancePeriodResponse"
  /persons/{person_id}/periods/{period_id}:
    parameters:
      - $ref: '#/components/parameters/personIdParam'
      - $ref: '#/components/parameters/periodIdParam'
    get:
      tags:
        - Attendance
      summary: "Retrieve attendance period"
      description: >-
        - Retrive attendance period by given period ID
      responses:
        "200":
          $ref: "#/components/responses/AttendancePeriodResponse"
    patch:
      tags:
        - Attendance
      summary: "Update attendance period for a person"
      description: >-
        - Update attendance period by given period ID
        - Return updated period entity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchAttendancePeriodRequest"
      responses:
        "200":
          $ref: "#/components/responses/AttendancePeriodResponse"
    delete:
      tags:
        - Attendance
      summary: "Delete attendance period for a person"
      description: >-
        - Delete attendance period for by given period ID
      responses:
        "204":
          description: "AttendancePeriod was successfully deleted"
  /person/{person_id}/attendance-policies:
    get:
      description: "Return current and upcoming attendance policies for an employee"
      tags:
        - Attendance
      parameters:
        - $ref: '#/components/parameters/personIdParam'
        - in: query
          name: time_range
          required: false
          description: |
            If present, restrict policies to those which apply within this time range.
            If missing, only the current policy will be returned.
            Historical policies are not returned, and
          schema:
            $ref: "#/components/schemas/TimeRangeObject"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                allOf:
                - type: object
                  properties:
                    _data:
                      type: array
                      description: |
                        Attendance policies in ascending chronological order. The first element is guaranteed to be the
                        policy that is in force at the start of the time range.
                      items:
                        $ref: "#/components/schemas/AttendancePolicy"
                - $ref: "#/components/schemas/MetaObject"
components:
  parameters:
    personIdParam:
      in: path
      name: person_id
      required: true
      schema:
        type: integer
    periodIdParam:
      in: path
      name: period_id
      required: true
      schema:
        type: string
  schemas:
    CreateAttendancePeriodRequest:
      title: Create AttendancePeriod Request
      description: >-
        - Request object for creating new period entity
      allOf:
        - $ref: "#/components/schemas/TimeRangeObject"
        - $ref: "#/components/schemas/AttendancePeriodTypeField"
        - $ref: "#/components/schemas/CommentObject"
        - $ref: "#/components/schemas/SkipApprovalField"
        - $ref: "#/components/schemas/ProjectIdField"
    PatchAttendancePeriodRequest:
      title: Update AttendancePeriod Request
      description: >-
        Request object for updating a period entity. Should only include fields which are intended to be updated.
      allOf:
        - $ref: "#/components/schemas/TimeRangeObject"
        - $ref: "#/components/schemas/AttendancePeriodTypeField"
        - $ref: "#/components/schemas/CommentObject"
        - $ref: "#/components/schemas/SkipApprovalField"
        - $ref: "#/components/schemas/ProjectIdField"
    AttendancePeriod:
      description: >-
        - Model of period entity
        - Describes a period of work or break time associated with a person
      allOf:
        - $ref: "#/components/schemas/IdentifierField"
        - $ref: "#/components/schemas/PersonIdentifierField"
        - $ref: "#/components/schemas/AttendancePeriodTypeField"
        - $ref: "#/components/schemas/AttendancePeriodStatusField"
        - $ref: "#/components/schemas/TimeRangeObject"
        - $ref: "#/components/schemas/TimestampsObject"
        - $ref: "#/components/schemas/CommentObject"
        - $ref: "#/components/schemas/ProjectIdField"
    AttendancePeriodTypeEnum:
      description: >-
        - Enum of attendance period types
      type: string
      enum:
        - work
        - break
    AttendancePeriodTypeField:
      description: >-
        - Field definition of attendance period types
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AttendancePeriodTypeEnum"
    AttendancePeriodStatusEnum:
      description: >-
        - Enum of attendance period statuses
      type: string
      enum:
        - pending
        - approved
        - rejected
    AttendancePeriodStatusField:
      description: >-
        - Field definition of attendance period statuses
      type: object
      properties:
        status:
          $ref: "#/components/schemas/AttendancePeriodStatusEnum"
    SkipApprovalField:
      description: >-
        - If true, set this period as approved and don't trigger an approval workflow in Personio
      properties:
        skipApproval:
          type: boolean
          nullable: true
          default: false
    ProjectIdField:
      description: >-
        - A project id to associate this attendance period with
      properties:
        project_id:
          type: string
          nullable: true
    IdentifierField:
      description: >-
        - Field definition of entity identifier
      type: object
      properties:
        id:
          type: string
    PersonIdentifierField:
      description: >-
        - Field definition of person identifier
      type: object
      properties:
        person_id:
          type: string

    # TODO do we need a timezone enabled and local time version of this?
    DateTimeProperty:
      description: Date time property
      type: string
      format: date-time
    TimeRangeObject:
      description: >-
        - Entity which represents a time range
      type: object
      properties:
        start:
          $ref: '#/components/schemas/DateTimeProperty'
        end:
          $ref: '#/components/schemas/DateTimeProperty'
    TimestampsObject:
      description: >-
        - Entity which represents a point in time
      type: object
      properties:
        created_at:
          $ref: '#/components/schemas/DateTimeProperty'
        updated_at:
          $ref: '#/components/schemas/DateTimeProperty'
    CommentObject:
      description: >-
        - A general purpose comment about this entity
      type: object
      properties:
        text:
          type: string
    MetaObject:
      description: "This object represents the metadata information for an object. It's a set of arbitrary key/value attributes such as `links`."
      type: object
      readOnly: true
      properties:
        _meta:
          type: object
          properties:
            links:
              type: object
              additionalProperties:
                type: string
    AttendancePolicy:
      type: "object"
      description: |
        Policy details which indicate constraints around the time that a person may work
      properties:
        since:
          type: string
          format: date-time
          nullable: false
          description: Time when this policy first applied. This may be in the past
        weekly_working_hours:
          type: integer
          nullable: true
          description: Expected number of working hours that this person should track in a week, excluding any holiday, absence or leave
        max_hours_per_day:
          type: integer
          nullable: true
          description: Maximum number of hours that this person may track as work in a 24h period
        minimum_break_duration_mins:
          type: integer
          nullable: true
          description: Minimum duration of any break that this person may track
  responses:
    AttendancePeriodResponse:
      description: "Successful response"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/AttendancePeriod"
              - $ref: "#/components/schemas/MetaObject"
