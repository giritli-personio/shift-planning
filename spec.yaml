---

openapi: "3.0.0"
info:
  title: "Attendances API"
  version: "0.1"
  description: "This service that exposes an API for attendances with integration partners"
  x-papi-meta:
    audience: PUBLIC
  x-papi-version: 2.1.0
  x-papi-gateway:
    service-url: http://attendances
    scopes:
      - name: personio:attendances:read
        description: Read access to Attendance Periods.
        models:
          - AttendancePeriod

servers:
  - url: https://api.personio.de

tags:
  - name: "Attendance"
    description: "Endpoints relating to the times that people work, and the rules that define this"

paths:
  /attendance-periods:
    get:
      x-papi-meta:
        beta: true
      tags:
        - Attendance
      summary: "Get all attendance periods"
      description: >-
        - Returns all attendance periods and can be filtered by person ID.
      parameters:
        - $ref: '#/components/parameters/personIdListParam'
        - in: query
          name: type
          schema:
            $ref: '#/components/schemas/AttendancePeriodTypeEnum'
          description: Filter by attendance period type
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/AttendancePeriodStatusEnum'
          description: Filter by attendance period approval status
        - in: query
          name: from
          description: Filter by attendance periods which start or end after a given date time
          schema:
            $ref: '#/components/schemas/DateTimeProperty'
        - in: query
          name: to
          description: Filter by attendance periods which start or end before a given date time
          schema:
            $ref: '#/components/schemas/DateTimeProperty'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/cursor'
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AttendancePeriod"
                  - $ref: "#/components/schemas/MetaObject"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "405":
          $ref: "#/components/responses/MethodNotAllowedResponse"
        "422":
          $ref: "#/components/responses/UnprocessableEntityResponse"
    post:
      x-papi-meta:
        beta: true
      x-papi-security:
        scopes:
          - personio:attendances:write
      tags:
        - Attendance
      summary: "Create attendance periods"
      description: >-
        - Create attendance periods.
        - Return newly created attendance periods.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAttendancePeriodRequest"
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      _data:
                        type: array
                        items:
                          $ref: "#/components/schemas/AttendancePeriod"
                  - $ref: "#/components/schemas/MetaObject"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "405":
          $ref: "#/components/responses/MethodNotAllowedResponse"
        "422":
          $ref: "#/components/responses/UnprocessableEntityResponse"
  /attendance-periods/{period_id}:
    parameters:
      - $ref: '#/components/parameters/periodIdParam'
    get:
      x-papi-meta:
        beta: true
      tags:
        - Attendance
      summary: "Get attendance period"
      description: >-
        - Retrieves an attendance period by given attendance period ID
      responses:
        "200":
          $ref: "#/components/responses/AttendancePeriodResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "405":
          $ref: "#/components/responses/MethodNotAllowedResponse"
        "422":
          $ref: "#/components/responses/UnprocessableEntityResponse"
    patch:
      x-papi-meta:
        beta: true
      x-papi-security:
        scopes:
          - personio:attendances:write
      tags:
        - Attendance
      summary: "Update attendance period"
      description: >-
        - Updates an attendance period by given attendance period ID
        - Returns updated attendance period
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchAttendancePeriodRequest"
      responses:
        "200":
          $ref: "#/components/responses/AttendancePeriodResponse"
        "400":
          $ref: "#/components/responses/BadRequestResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
        "405":
          $ref: "#/components/responses/MethodNotAllowedResponse"
        "422":
          $ref: "#/components/responses/UnprocessableEntityResponse"
    delete:
      x-papi-meta:
        beta: true
      x-papi-security:
        scopes:
          - personio:attendances:write
      tags:
        - Attendance
      summary: "Delete attendance period"
      description: >-
        - Deletes an attendance period for by given attendance period ID
      responses:
        "204":
          description: "AttendancePeriod was successfully deleted"
        "401":
          $ref: "#/components/responses/UnauthorizedResponse"
        "403":
          $ref: "#/components/responses/ForbiddenResponse"
        "404":
          $ref: "#/components/responses/NotFoundResponse"
components:
  parameters:
    personIdParam:
      in: path
      name: person_id
      required: true
      schema:
        type: integer
    personIdListParam:
      name: person_id
      in: query
      description: >-
        - Comma separated list of person_id to filter results by
      schema:
        type: array
        minItems: 1
        maxItems: 10
        items:
          type: string
      style: form
      explode: false
      examples:
        oneId:
          summary: Example of a single ID
          value: ["person_id_1"]
        multipleIds:
          summary: Example of multiple IDs
          value: ["person_id_2", "person_id_3", "person_id_4"]
    periodIdParam:
      in: path
      name: period_id
      required: true
      schema:
        type: string
    limit:
      in: query
      name: limit
      description: "The amount of resources to be returned per one request. It can range between 1 and 50, and the default is 10."
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 10
    cursor:
      in: query
      name: cursor
      description: |
        The pagination cursor to navigate over to the next list of resources. If you pass a specific limit
        to your request, or you rely on the default value of the number of resources to be returned, then
        your subsequent call has to include the cursor in order to retrieve the next list of resources.
        If cursor is missing, the first page is returned.
      schema:
        type: string
        example: "cur_82sQwR2eZvKilo2duNh219Kw"
  schemas:
    CreateAttendancePeriodRequest:
      title: Create AttendancePeriod Request
      description: >-
        - Request object for creating new attendance period
      type: array
      minItems: 1
      maxItems: 10
      items:
        allOf:
          - $ref: '#/components/schemas/PersonIdentifierField'
          - $ref: "#/components/schemas/TimeRangeObject"
          - $ref: "#/components/schemas/AttendancePeriodTypeField"
          - $ref: "#/components/schemas/CommentObject"
          - $ref: "#/components/schemas/SkipApprovalField"
          - $ref: "#/components/schemas/ProjectIdField"
    PatchAttendancePeriodRequest:
      title: Update AttendancePeriod Request
      description: >-
        Request object for updating a period entity. Should only include fields which are intended to be updated.
      allOf:
        - $ref: "#/components/schemas/TimeRangeObject"
        - $ref: "#/components/schemas/AttendancePeriodTypeField"
        - $ref: "#/components/schemas/CommentObject"
        - $ref: "#/components/schemas/SkipApprovalField"
        - $ref: "#/components/schemas/ProjectIdField"
    AttendancePeriod:
      description: >-
        - Model of period entity
        - Describes a period of work or break time associated with a person
      allOf:
        - $ref: "#/components/schemas/IdentifierField"
        - $ref: "#/components/schemas/PersonIdentifierField"
        - $ref: "#/components/schemas/AttendancePeriodTypeField"
        - $ref: "#/components/schemas/AttendancePeriodStatusField"
        - $ref: "#/components/schemas/TimeRangeObject"
        - $ref: "#/components/schemas/TimestampsObject"
        - $ref: "#/components/schemas/CommentObject"
        - $ref: "#/components/schemas/ProjectIdField"
    AttendancePeriodTypeEnum:
      description: >-
        - Possible attendance period types
        * `WORK` - Attendance period representing working time
        * `BREAK` - Attendance period representing break time
      type: string
      enum:
        - WORK
        - BREAK
    AttendancePeriodTypeField:
      description: >-
        - Field definition of attendance period types
      type: object
      properties:
        type:
          $ref: "#/components/schemas/AttendancePeriodTypeEnum"
    AttendancePeriodStatusEnum:
      description: >-
        - Possible attendance period statuses
        * `pending` - Attendance periods that are pending approval or rejection
        * `approved` - Attendance periods that have been approved
        * `rejected` - Attendance periods that have been rejected
      type: string
      enum:
        - pending
        - approved
        - rejected
    AttendancePeriodStatusField:
      description: >-
        - Field definition of attendance period statuses
      type: object
      properties:
        status:
          $ref: "#/components/schemas/AttendancePeriodStatusEnum"
    SkipApprovalField:
      description: >-
        - If true, set this period as approved and don't trigger an approval workflow in Personio
      properties:
        skip_approval:
          type: boolean
          nullable: true
          default: false
    ProjectIdField:
      description: >-
        - A project id to associate this attendance period with
      properties:
        project_id:
          type: string
          nullable: true
          example: "82173"
    IdentifierField:
      description: >-
        - Field definition of entity identifier
      type: object
      properties:
        id:
          type: string
          example: "1234"
    PersonIdentifierField:
      description: >-
        - Field definition of person identifier
      type: object
      properties:
        person_id:
          type: string
          maxLength: 40
          example: "5678"
    DateTimeProperty:
      description: Date time property
      type: string
      format: date-time
    TimeRangeObject:
      description: >-
        - Entity which represents a time range
      type: object
      properties:
        start:
          $ref: '#/components/schemas/DateTimeProperty'
        end:
          $ref: '#/components/schemas/DateTimeProperty'
    TimestampsObject:
      description: >-
        - Entity which represents a point in time
      type: object
      properties:
        created_at:
          $ref: '#/components/schemas/DateTimeProperty'
        updated_at:
          $ref: '#/components/schemas/DateTimeProperty'
    CommentObject:
      description: >-
        - A general purpose comment about this entity
      type: object
      properties:
        comment:
          type: string
          maxLength: 200
          example: "An example comment"
    MetaObject:
      description: "This object represents the metadata information for an object. It's a set of arbitrary key/value attributes such as `links`."
      type: object
      readOnly: true
      properties:
        _meta:
          type: object
          properties:
            links:
              type: object
              additionalProperties:
                type: string
  responses:
    AttendancePeriodResponse:
      description: "Successful response"
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/AttendancePeriod"
              - $ref: "#/components/schemas/MetaObject"
    BadRequestResponse:
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: "https://raw.githubusercontent.com/personio/api-docs/master/common-components-v2.json#/components/schemas/ErrorResponse"
          example:
            personio_trace_id: "aswo3f-a202lfso-312123sld-1230ddd"
            timestamp: "2021-05-28T11:17:30+00:00"
            errors:
              - title: "Bad request"
                detail: "Provided request parameters are invalid."
                type: "https://developer.personio.de/reference/errors#common.bad_request"
    UnauthorizedResponse:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: "https://raw.githubusercontent.com/personio/api-docs/master/common-components-v2.json#/components/schemas/ErrorResponse"
          example:
            personio_trace_id: "aswo3f-a202lfso-312123sld-1230ddd"
            timestamp: "2021-05-28T11:17:30+00:00"
            errors:
              - title: "Unauthorized"
                detail: "Authentication is required and has failed."
                type: "https://developer.personio.de/reference/errors#common.unauthorized"
    ForbiddenResponse:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: "https://raw.githubusercontent.com/personio/api-docs/master/common-components-v2.json#/components/schemas/ErrorResponse"
          example:
            personio_trace_id: "aswo3f-a202lfso-312123sld-1230ddd"
            timestamp: "2021-05-28T11:17:30+00:00"
            errors:
              - title: "Forbidden"
                detail: "You do not have permission to access this resource."
                type: "https://developer.personio.de/reference/errors#common.forbidden"
    NotFoundResponse:
      description: Not found
      content:
        application/problem+json:
          schema:
            $ref: "https://raw.githubusercontent.com/personio/api-docs/master/common-components-v2.json#/components/schemas/ErrorResponse"
          example:
            personio_trace_id: "aswo3f-a202lfso-312123sld-1230ddd"
            timestamp: "2021-05-28T11:17:30+00:00"
            errors:
              - title: "Resource not found"
                detail: "The requested resource could not be found."
                type: "https://developer.personio.de/reference/errors#common.not_found"
    MethodNotAllowedResponse:
      description: Method not allowed
      content:
        application/problem+json:
          schema:
            $ref: "https://raw.githubusercontent.com/personio/api-docs/master/common-components-v2.json#/components/schemas/ErrorResponse"
          example:
            personio_trace_id: "aswo3f-a202lfso-312123sld-1230ddd"
            timestamp: "2021-05-28T11:17:30+00:00"
            errors:
              - title: "Method not allowed"
                detail: "The HTTP method used is not supported for this endpoint."
                type: "https://developer.personio.de/reference/errors#common.method_not_allowed"
    UnprocessableEntityResponse:
      description: Unprocessable entity
      content:
        application/problem+json:
          schema:
            $ref: "https://raw.githubusercontent.com/personio/api-docs/master/common-components-v2.json#/components/schemas/ErrorResponse"
          example:
            personio_trace_id: "aswo3f-a202lfso-312123sld-1230ddd"
            timestamp: "2021-05-28T11:17:30+00:00"
            errors:
              - title: "Unprocessable entity"
                detail: "The request was well-formed but was unable to be followed due to semantic errors."
                type: "https://developer.personio.de/reference/errors#common.unprocessable_entity"
